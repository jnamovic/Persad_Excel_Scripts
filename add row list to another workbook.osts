{"version":"0.2.0","body":"function main(workbook: ExcelScript.Workbook, keys: string): void {\n  let table = workbook.getWorksheet('Sheet1').getTables()[0];\n  let range = table.getRangeBetweenHeaderAndTotal();\n  let rows = range.getValues();\n  let obj = JSON.parse(keys) as object;\n  let keysObj = Object.values(obj);\n  // for each row of input\n  for (let input of keysObj) {\n    let match = false;\n    // for each row in aggregated sheet\n    for (let i = 0; i < rows.length; i++) {\n      let row = rows[i];\n      let id = row[0];\n      if (input[0] === id) {\n        match = true;\n        break;\n      }\n    }\n    if (match == false) {\n      addRow(workbook.getWorksheet('Sheet1'), input);\n    }\n  }\n  return;\n}\n\nfunction addRow(sheet: ExcelScript.Worksheet, data: (string|number|boolean)[]): void {\n  const usedRange = sheet.getUsedRange();\n  const startCell = usedRange.getLastRow().getCell(0,0).getOffsetRange(1,0);\n  const targetRange = startCell.getResizedRange(0, data.length-1);\n  console.log(data)\n  targetRange.setValues([data]);\n  return;\n}","description":"","parameterInfo":"{\"originalParameterOrder\":[{\"name\":\"keys\",\"index\":0}],\"parameterSchema\":{\"type\":\"object\",\"required\":[\"keys\"],\"properties\":{\"keys\":{\"type\":\"string\"}}},\"returnSchema\":{\"type\":\"object\",\"properties\":{}}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":1}"}